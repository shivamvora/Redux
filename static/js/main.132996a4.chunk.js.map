{"version":3,"sources":["components/AccountStatus.jsx","components/Auth.jsx","components/Balance.jsx","components/Banking.jsx","actions/bankingActions.js","App.jsx","reducers/bankingReducers.js","index.js"],"names":["AccountStatus","isSavingsAccount","useSelector","state","Auth","className","Balance","balance","Banking","useState","amount","setAmount","dispatch","useDispatch","type","value","onChange","e","target","placeholder","onClick","parseInt","deposit","withdraw","App","initialState","store","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"qKAaeA,EATO,WAClB,IAAMC,EAAoBC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,oBACrD,OACI,8BACI,6BAAKA,EAAiB,kBAAoB,uBCEvCG,EARF,WACT,OACI,8BACI,wBAAQC,UAAU,eAAlB,sBCYGC,EAdC,WAEZ,IAAMC,EAAUL,aAAY,SAACC,GAAD,OAAWA,EAAMI,WAE/BL,aAAY,SAAAC,GAAK,OAAIA,KAGnC,OACI,8BACQ,mCAAMI,Q,OCwBPC,EAjCC,WAAO,IAAD,EAESC,mBAAS,IAFlB,mBAEXC,EAFW,KAEJC,EAFI,KAIZC,EAAWC,cAiBjB,OACI,sBAAKR,UAAU,aAAf,UACI,uBAAOS,KAAK,OAAOT,UAAU,eAAeU,MAAOL,EAAQM,SAAU,SAACC,GAAD,OAAMN,EAAUM,EAAEC,OAAOH,QAAQI,YAAY,wCAClH,wBAAQC,QAlBM,WAClBR,ECVe,SAACF,GACpB,MAAO,CAACI,KAAK,UAAWJ,OAAQW,SAASX,IDS5BY,CAAQZ,KAiBoBL,UAAU,kBAA3C,qBACA,wBAAQe,QAhBQ,WACpBR,ECVgB,SAACF,GACrB,MAAO,CAACI,KAAK,WAAYJ,OAAQW,SAASX,IDS7Ba,CAASb,KAeoBL,UAAU,kBAA5C,sBACA,wBAAQe,QAdc,WAC1BR,ECTG,CACHE,KAAM,sBDqBsCT,UAAU,kBAAlD,8BACA,wBAAQe,QAZK,WACjBR,ECNG,CACHE,KAAK,oBDgB8BT,UAAU,iBAAzC,4BACA,wBAAQe,QAVY,WACxBR,ECFG,CACHE,KAAK,oBDUqCT,UAAU,oBAAhD,qCEdGmB,EAXH,WACR,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,cCVNC,EAAe,CACjBlB,QAAS,EACTN,kBAAiB,GCGfyB,EAAQC,aDCgB,WAAkC,IAAjCxB,EAAgC,uDAAxBsB,EAAaG,EAAW,uCAG3D,OAAOA,EAAOd,MACV,IAAK,UAED,OAAO,2BAAIX,GAAX,IAAkBI,QAAQJ,EAAMI,QAAUqB,EAAOlB,SACrD,IAAK,WAED,OAAO,2BAAIP,GAAX,IAAkBI,QAAQJ,EAAMI,QAAUqB,EAAOlB,SACrD,IAAK,mBACD,OAAO,2BAAIP,GAAX,IAAiBI,QAAsB,KAAdJ,EAAMI,UAEnC,IAAK,iBACD,OAAO,2BAAIJ,GAAX,IAAiBI,QAAQ,IAE7B,IAAK,iBACD,OAAO,2BAAIJ,GAAX,IAAiBF,kBAAkBE,EAAMF,mBAC7C,QACI,OAAOE,MChBnB0B,IAASC,OACT,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACA,cAAC,EAAD,MAKAK,SAASC,eAAe,W","file":"static/js/main.132996a4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst AccountStatus = () => {\r\n    const isSavingsAccount =  useSelector(state => state.isSavingsAccount);\r\n    return (\r\n        <div>\r\n            <h1>{isSavingsAccount?\"Savings Account\" : \"Current Account\"}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountStatus;\r\n","import React from 'react'\r\n\r\nconst Auth = () => {\r\n    return (\r\n        <div>\r\n            <button className=\"btn btn-info\">Login</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Balance = () => {\r\n\r\n    const balance = useSelector((state) => state.balance);\r\n\r\n    const store = useSelector(state => state)\r\n    \r\n\r\n    return (\r\n        <div>\r\n                <h1>${balance}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Balance;\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport {deposit,withdraw,collectInterest,deleteAccount,toggleAccount} from \"../actions/bankingActions\";\r\nconst Banking = () => {\r\n\r\n    const [amount,setAmount] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleDeposit = () => {\r\n        dispatch(deposit(amount));        \r\n    };\r\n    const hanndleWithdraw = () => {\r\n        dispatch(withdraw(amount));\r\n    };\r\n    const handleCollectInterest = () => {\r\n        dispatch(collectInterest(amount));   \r\n    };\r\n    const handleDelete = () => {\r\n        dispatch(deleteAccount(amount));\r\n    };\r\n    const handleAccountChange = () => {\r\n        dispatch(toggleAccount());\r\n    }\r\n    return (\r\n        <div className=\"form-group\">\r\n            <input type=\"text\" className=\"form-control\" value={amount} onChange={(e)=> setAmount(e.target.value)} placeholder=\"Enter Value and Perform Transaction\"/>\r\n            <button onClick={handleDeposit}  className=\"btn btn-success\">Deposit</button>\r\n            <button onClick={hanndleWithdraw} className=\"btn btn-primary\">Withdraw</button>\r\n            <button onClick={handleCollectInterest} className=\"btn btn-warning\">Collect Interest</button>\r\n            <button onClick={handleDelete} className=\"btn btn-danger\">Delete Account</button>\r\n            <button onClick={handleAccountChange} className=\"btn btn-secondary\">Change Account Type</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banking;\r\n\r\n\r\n","export const deposit = (amount) =>{\r\n    return {type:\"DEPOSIT\", amount: parseInt(amount)};\r\n}\r\nexport const withdraw = (amount) =>{\r\n    return {type:\"WITHDRAW\", amount: parseInt(amount)};\r\n}\r\nexport const collectInterest = () =>{\r\n    return {\r\n        type: \"COLLECT_INTEREST\",\r\n        \r\n    };\r\n}\r\nexport const deleteAccount = () =>{\r\n    return {\r\n        type:\"DELETE_ACCOUNT\",\r\n        \r\n    };\r\n}\r\n\r\nexport const toggleAccount = () => {\r\n    return {\r\n        type:\"TOGGLE_ACCOUNT\",\r\n    };\r\n};","import React from 'react'\r\nimport AccountStatus from './components/AccountStatus'\r\nimport Auth from './components/Auth'\r\nimport Balance from './components/Balance'\r\nimport Banking from './components/Banking'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <Auth/>\r\n            <Balance/>\r\n            <Banking/>\r\n            <AccountStatus/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","\r\n\r\nconst initialState = {\r\n    balance: 0,\r\n    isSavingsAccount:false,\r\n};\r\n\r\n\r\nexport const bankingReducer = (state = initialState,action) => {\r\n\r\n    \r\n    switch(action.type) {\r\n        case \"DEPOSIT\" : \r\n            //  logic for deposit\r\n            return {...state, balance:state.balance + action.amount}\r\n        case \"WITHDRAW\":\r\n            // logic for withdraw\r\n            return {...state, balance:state.balance - action.amount}\r\n        case \"COLLECT_INTEREST\":\r\n            return {...state,balance:state.balance*1.03}\r\n            // logic for collect_interest\r\n        case \"DELETE_ACCOUNT\":\r\n            return {...state,balance:0}\r\n            // logic for delete_account\r\n        case \"TOGGLE_ACCOUNT\":\r\n            return {...state,isSavingsAccount:!state.isSavingsAccount}\r\n        default : \r\n            return state;\r\n    }   \r\n\r\n};\r\n\r\n\r\n//\r\n\r\n// actions\r\n\r\n// deposit\r\nconst deposit = {\r\n    type: \"DEPOSIT\",\r\n    amount: 20\r\n}\r\n\r\n//  withdraw\r\n\r\nconst withdraw = {\r\n    type: \"WITHDRAW\",\r\n    amount: 3\r\n}\r\n\r\n// collect interest\r\n\r\nconst collectInterest = {\r\n    type: \"COLLECT_INTEREST\",\r\n\r\n}\r\n\r\n// delete account\r\n\r\nconst deleteAccount = {\r\n    type:\"DELETE_ACCOUNT\",\r\n    \r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {createStore} from \"redux\";\r\nimport {bankingReducer} from \"./reducers/bankingReducers\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nconst store = createStore(bankingReducer);\r\n\r\n\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n<App/>\r\n</Provider>\r\n\r\n\r\n,\r\ndocument.getElementById(\"root\"));\r\n"],"sourceRoot":""}